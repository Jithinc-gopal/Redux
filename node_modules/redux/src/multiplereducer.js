import { createStore,combineReducers } from "https://cdn.skypack.dev/redux";


// const counterReducer = (state={value:0},action)=>{
//     switch(action.type){
//         case "increment":
//             return{
//                 ...state,
//                 value:state.value+1
//             }
//             case "decrement":
//                 return{
//                     ...state,
//                     value:state.value-1

//             }
//             default:
//                 return state

//     }

// }

// const themeReducer =(state={color:"white"},action)=>{
//     switch(action.type){
//         case "togle-color":
//             return{
//                 ...state,
//                 color:state.color==="white"?"blue":"white"
//             }
//             default:
//                 return state
//     }

// }

// const rootReducer = combineReducers({
//     count:counterReducer,
//     theme:themeReducer
// })

// const increment = ()=>{
//    return{ type:"increment"}

// }
// const decrement = ()=>{
//    return{type:"decrement"} 
// }

// const store = createStore(rootReducer)
// // const state = store.getState()

// store.subscribe(()=>{
//     document.getElementById('value').innerText=store.getState().count.value
//     document.getElementById('color').innerText=store.getState().theme.color
//     document.body.style.backgroundColor=store.getState().theme.color


// })

// document.getElementById('inc').onclick=()=>{
//     store.dispatch(increment())
//     console.log("increment")
// }
// document.getElementById('dec').onclick=()=>{
//     store.dispatch(decrement())
//         console.log("decrement")

// }

// document.getElementById('color-change').onclick=()=>{
//     store.dispatch({
//         type:"togle-color"
//     })
// }

const counterReducer = (prevState ={count:0},action)=>{
    switch(action.type){
        case "increment":
            return{
                ...prevState,
                count:prevState.count+action.payload


            }
            case "decrement":
            return{
                ...prevState,
                count:prevState.count-action.
                payload

            }
            default:
                return prevState
    }

}


const themeReducer=(prevState={color:"white"},action)=>{
    switch(action.type){
        case "changecolor":{
            return {
                ...prevState,
                color:prevState.color==="white"?"blue":"white"
            }
        }
        default:
            return prevState
    }
}


const rootReducer = combineReducers({
    count:counterReducer,
    color:themeReducer
})



const store = createStore(rootReducer)

store.subscribe(()=>{
    document.getElementById('value').innerText=store.getState().count.count
    document.getElementById('color').innerText = store.getState().color.color
    document.body.style.background = store.getState().color.color

})

document.getElementById('inc').onclick=()=>{
    store.dispatch({
        type:"increment", 
        payload:1})
}
document.getElementById('dec').onclick=()=>{
    store.dispatch({type:"decrement",payload:1})
}

document.getElementById("color-change").onclick=()=>{
    store.dispatch({type:"changecolor"})
}